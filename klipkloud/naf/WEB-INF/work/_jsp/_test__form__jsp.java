/*
 * JSP generated by Resin-3.1.12 (built Mon, 29 Aug 2011 03:22:08 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;

public class _test__form__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=GBK");
    request.setCharacterEncoding("GBK");
    com.caucho.jsp.IteratorLoopSupportTag _jsp_loop_0 = null;
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      if (_jsp_loop_0 == null)
        _jsp_loop_0 = new com.caucho.jsp.IteratorLoopSupportTag();
      java.lang.Object _jsp_items_1 = _caucho_expr_0.evalObject(_jsp_env);
      java.util.Iterator _jsp_iter_1 = com.caucho.jstl.rt.CoreForEachTag.getIterator(_jsp_items_1);
      _jsp_loop_0.init(0, Integer.MAX_VALUE, 1);
      Object _jsp_status_1 = pageContext.putAttribute("status", _jsp_loop_0);
      Object _jsp_oldVar_1 = pageContext.getAttribute("field");
      while (_jsp_iter_1.hasNext()) {
        Object _jsp_i_1 = _jsp_iter_1.next();
        pageContext.setAttribute("field", _jsp_i_1);
        _jsp_loop_0.setCurrent(_jsp_i_1, _jsp_iter_1.hasNext());
        out.write(_jsp_string1, 0, _jsp_string1.length);
        _caucho_expr_1.print(out, _jsp_env, false);
        out.write(_jsp_string2, 0, _jsp_string2.length);
        _caucho_expr_2.print(out, _jsp_env, false);
        out.write(_jsp_string3, 0, _jsp_string3.length);
        _caucho_expr_3.print(out, _jsp_env, false);
        out.write(_jsp_string4, 0, _jsp_string4.length);
      }
      pageContext.pageSetOrRemove("field", _jsp_oldVar_1);
      pageContext.removeAttribute("status");
      out.write(_jsp_string5, 0, _jsp_string5.length);
      if (_jsp_loop_0 == null)
        _jsp_loop_0 = new com.caucho.jsp.IteratorLoopSupportTag();
      java.lang.Object _jsp_items_2 = _caucho_expr_4.evalObject(_jsp_env);
      java.util.Iterator _jsp_iter_2 = com.caucho.jstl.rt.CoreForEachTag.getIterator(_jsp_items_2);
      _jsp_loop_0.init(0, Integer.MAX_VALUE, 1);
      Object _jsp_oldVar_2 = pageContext.getAttribute("action");
      while (_jsp_iter_2.hasNext()) {
        Object _jsp_i_2 = _jsp_iter_2.next();
        pageContext.setAttribute("action", _jsp_i_2);
        _jsp_loop_0.setCurrent(_jsp_i_2, _jsp_iter_2.hasNext());
        out.write(_jsp_string6, 0, _jsp_string6.length);
        _caucho_expr_5.print(out, _jsp_env, false);
        out.write(_jsp_string7, 0, _jsp_string7.length);
        _caucho_expr_5.print(out, _jsp_env, false);
        out.write(_jsp_string8, 0, _jsp_string8.length);
      }
      pageContext.pageSetOrRemove("action", _jsp_oldVar_2);
      out.write(_jsp_string9, 0, _jsp_string9.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 7170261747151080670L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    manager.addTaglibFunctions(_jsp_functionMap, "c", "http://java.sun.com/jsp/jstl/core");
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
    _caucho_expr_0 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${result.fields}");
    _caucho_expr_1 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${field.name}");
    _caucho_expr_2 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${status.index}");
    _caucho_expr_3 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${field.typeExpr}");
    _caucho_expr_4 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${result.actions}");
    _caucho_expr_5 = com.caucho.jsp.JspUtil.createExpr(pageContext.getELContext(), "${action.name }");
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("test.Form.jsp"), 7654859156823571951L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  static {
    try {
    } catch (Exception e) {
      e.printStackTrace();
      throw new RuntimeException(e);
    }
  }
  private static com.caucho.el.Expr _caucho_expr_0;
  private static com.caucho.el.Expr _caucho_expr_1;
  private static com.caucho.el.Expr _caucho_expr_2;
  private static com.caucho.el.Expr _caucho_expr_3;
  private static com.caucho.el.Expr _caucho_expr_4;
  private static com.caucho.el.Expr _caucho_expr_5;

  private final static char []_jsp_string8;
  private final static char []_jsp_string3;
  private final static char []_jsp_string7;
  private final static char []_jsp_string5;
  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  private final static char []_jsp_string6;
  private final static char []_jsp_string9;
  private final static char []_jsp_string4;
  static {
    _jsp_string8 = "\"  />\r\n		".toCharArray();
    _jsp_string3 = "\"  type=\"text\" append=\"true\"  datatype=\"".toCharArray();
    _jsp_string7 = "\" action=\"".toCharArray();
    _jsp_string5 = "\r\n		\r\n		".toCharArray();
    _jsp_string1 = "\r\n			<lable>".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n<script type=\"text/javascript\">\r\n	$(function() {\r\n		var action=\"\";\r\n		\r\n		$(\".submit\").click(function(){\r\n			action=$(this).attr(\"action\");\r\n		});\r\n		\r\n		$(\":input\").dblclick(function(){		\r\n			//alert(\"sdfsdf\");	\r\n			//$( \".parameters\" ).toggle();\r\n			\r\n			var pos = $(this).position();\r\n\r\n		    // .outerWidth() takes into account border and padding.\r\n		   \r\n		    //show the menu directly over the placeholder\r\n		    \r\n		    if(!$(\"#parameters\").is(\":visible\")){\r\n		    	// var width = $(this).outerWidth();\r\n				var internalType=$(this).attr(\"datatype\");		    \r\n		    	fillResult(\"/naf/suggestParameter/\"+internalType+\"/\",\"#parameters\");\r\n		    }\r\n		    \r\n		    $(\"#parameters\").css({\r\n		        position: \"absolute\",\r\n		        top: pos.top + pos.height+\"px\",\r\n		        left: (pos.left) + \"px\"\r\n		    }).toggle();\r\n			\r\n		\r\n		});\r\n		\r\n		$( window ).resize(function() {\r\n			 // $( \"#log\" ).append( \"<div>Handler for .resize() called.</div>\" );\r\n			var currentTargetId= $(\"#parameters\").attr(\"targetInputId\");\r\n			console.log(currentTargetId)	;\r\n			var pos = $(\"#\"+currentTargetId).position();\r\n			 $(\"#parameters\").css({\r\n			        position: \"absolute\",\r\n			        top: pos.top + pos.height+\"px\",\r\n			        left: (pos.left) + \"px\"\r\n			   });\r\n		});\r\n	\r\n		\r\n		var cache = {};\r\n\r\n		$(\".mainform\").submit(function(event) {\r\n			\r\n			if(action==\"\"){\r\n				return;\r\n			}\r\n			$(\":input\").attr(\"disabled\", true);\r\n			event.preventDefault();\r\n			var parameters = \"\";\r\n			$(\"input\").each(function() {\r\n				if ($(this).attr(\"append\") == \"true\") {\r\n					parameters += encodeURIComponent($(this).val()) + \"/\";\r\n				}				\r\n			});\r\n			var reqURI = \"/naf/\" + action + \"/\" + parameters;\r\n			fillResult(reqURI,\"#content\");\r\n\r\n		});\r\n		//var currentTargetId=\"\";\r\n		 $( \"form input:text\" ).focus(function() {\r\n			 \r\n			 //currentTargetId=$(this).attr(\"id\");\r\n			 //console.log(\"form input:text clicked: \"+currentTargetId)	;\r\n			 $(\"#parameters\").attr(\"targetInputId\",$(this).attr(\"id\"));\r\n			 \r\n		});\r\n		\r\n		//\r\n\r\n\r\n	});\r\n		\r\n	$(document).ready(function() {\r\n		 $(\"form:not(.filter) :input:visible:enabled:first\").focus();\r\n	\r\n	});	\r\n		\r\n</script>\r\n\r\n\r\n\r\n<style>\r\n.form {\r\n	font-size: 20px;\r\n}\r\n#parameters {\r\n	display: none;\r\n	border: 1px solid grey; \r\n	width: 400px;\r\n	height: 400px;\r\n	overfollow:auto;\r\n	padding-left: 20px;\r\n	padding-right: 20px;\r\n}\r\n</style>\r\n\r\n<div class=\"form\">\r\n	<form class=\"mainform\">\r\n		".toCharArray();
    _jsp_string2 = "</lable>\r\n			<input id=\"fl".toCharArray();
    _jsp_string6 = "\r\n			<input type=\"submit\" class=\"submit\" value=\"".toCharArray();
    _jsp_string9 = "\r\n		\r\n	</form>\r\n\r\n\r\n</div>\r\n\r\n<div id=\"parameters\" > Parameters </div>\r\n\r\n\r\n".toCharArray();
    _jsp_string4 = "\" autocomplete=\"off\"/>\r\n		".toCharArray();
  }
}
